<?php include_once ('../../../../global.php');

function buildArr(array $elements, $parentId = 0)
{
	$branch = array();
	foreach ($elements as $element) 
	{
	    if ($element['parent_id'] == $parentId) 
	    {
	        $children = buildArr($elements, $element['id']);
	        if ($children) 
	        {
	           
	            $element['perform']['params']['perform'] = $children[0]['perform'];
	        }
	         
	        $branch[] = $element;
	    }
	}
	return $branch;
}
function get_on_failure($value){

	$on_failure=array_combine($value['setvariablename'],$value['variablevalue']);
	$i = 1;
	foreach($on_failure as $failure_name=>$failure_value)
	{
		$erroearray[$i-1]=array('perform'=>array('type'=>$failure_name,'params'=>array('value'=>$failure_value)),'parent_id'=>$i-1,'id'=>$i);
		$i++;
	}
	$on_failure_Final = buildArr($erroearray);
	unset($on_failure_Final[0]['id']);
	unset($on_failure_Final[0]['parent_id']);
	return $on_failure_Final;
}
if(sizeof($_POST)>0){
		  	
		$postdata=$_POST;
		unset($postdata['variablenamearray']);
		unset($postdata['variabletypearray']);
		unset($postdata['variabledefaultarray']);
		unset($postdata['nestable_structure']);
		$finalpostsize= sizeof($postdata);

		//For post size end.
		$variablenames[]=array('type'=>"string","name"=>"temp_return_result", "value"=>"");
		$variablenames[]=array('type'=>"string","name"=>"next_action", "value"=>"");
		
		$counterno=1;
		$taskCounter=1;
		$nextActionCounter=2;
		$getfinaldata=array();
		$foreach_obj_counter=1;
function makeNestableListUsingJSONArray($jsonArray)
{
	
	global $assignwhileCounter;
	global $whileCaseId;
	global $getfinaldata;
	global $counterno;
	global $taskCounter;
	global $nextActionCounter;
	global $finalpostsize;
	global $tasklistArray;
	global $variablenames;
	global $counter_foreach;
	global $foreach_id_next_action;
	global $foreach_obj_counter;
	for ( $i = 0; $i < sizeof($jsonArray); $i++) {
				
					///Create data start..
				    $sq_key=$jsonArray[$i]['id'];
					$get_form_value['data']=$_POST[$sq_key];
					$id=explode("-",$sq_key); 
					if(isset($id['0']) && $id['0']!="" && $id['0']=="tasklist")
					{ 
						foreach ($get_form_value as $keys => $taskvalue){
							
							$uniqueid=$_SESSION['user']['name']."_".rand();
							if(!empty($getfinaldata)){
								$tasklistArray['tasklist'][]=array("task_id"=>$taskCounter,"uniqueid"=>$uniqueid,"userId"=>$_SESSION['user']['user_id'],"nm"=>"","actionlist"=>$getfinaldata);
								$counterno=1;
								$taskCounter=1;
								$nextActionCounter=2;
								$getfinaldata=array();
							}
							//for task list..
								$taskarray=getTaskListData(array('id'=>$taskvalue['tasklist']));
								$variableList=$taskarray['data'][0]['variablelist'];
								$taskarray=$taskarray['data'][0]['robot'][0]['tasklist'];
								
								$tasklistArray['tasklist'][]=$taskarray;
								//$taskCounter++;
								foreach ($variableList as $key => $variablevalue){
									$variablenames[]=$variablevalue;
								}
						}
					}
					else if(isset($id['1']) && $id['1']!="")
				  	{
					  	$getdata=get_data_by_table(array("table"=>"configure","id"=>$id['1']));	
					  	$tablerecord=$getdata['data'];
					  	unset($tablerecord[0]['id']);
					  	$tablerecord[0]['action_id']=intval($counterno);
					  	$tablerecord[0]['on_success']['next']['next_action']="";
						foreach ($get_form_value as $value)
						{
							if(isset($value['setvariablename']) && sizeof($value['setvariablename'])>0){
								if($value['setvariablename'][0]!=""){
									$on_failure_Final=get_on_failure($value);
								}
							}
							$tablerecord[0]['nm']=$value['comment'];
						  	$tablerecord[0]['on_success']['next']['wait_time']=intval($value['wait']);
						  	if(isset($value['mode'])){
						  		if(isset($value['xpath_getvalue']) && $value['xpath_getvalue']!="")
							  	{
							  		$value['xpath']=$value['xpath_getvalue'];
							  		unset($value['xpath_getvalue']);
							  	}
							  	if(isset($value['xpath_set_value']) && $value['xpath_set_value']!="")
							  	{
							  		$value['xpath']=$value['xpath_set_value'];	
							  		unset($value['xpath_set_value']);
							  	}
							  	if(isset($value['xpath_click']) && $value['xpath_click']!="")
							  	{
							  		$value['xpath']=$value['xpath_click'];
							  		unset($value['xpath_click']);
							  	}
							}

						  	if(isset($value['returntype']) && $value['returntype']!=""){
						  		$tablerecord[0]['on_success']['return_type']=$value['returntype'];	
						  	}else{
						  		$tablerecord[0]['on_success']['return_type']="none";
						  	}

						  	if(isset($value['variablename'])){
						  		$tablerecord[0]['on_success']['save'][]=array("var"=>$value['variablename']);	
						  	}
						  	if(isset($on_failure_Final[0])){
								  $tablerecord[0]['on_failure']['error_handle'][0]['val']="error";
								  $tablerecord[0]['on_failure']['error_handle'][0]['do']=$on_failure_Final[0];	
								  $on_failure_Final="";
							  }
							 
						  	if(isset($value['x_loc'])){
						  		$value['x_loc']=intval($value['x_loc']);
						  	}
						  	if(isset($value['y_loc'])){
						  		$value['y_loc']=intval($value['y_loc']);
							}
							if(isset($value['x_loc_drag'])){
								foreach($value['x_loc_drag'] as $xlocdrag){
									$value['x_loc'][]=intval($xlocdrag);
								}
								unset($value['x_loc_drag']);
							}
							if(isset($value['y_loc_drag'])){
								foreach($value['y_loc_drag'] as $xlocdrag){
									$value['y_loc'][]=intval($xlocdrag);
								}
								unset($value['y_loc_drag']);
							}  
						  	if(isset($value['row'])){
						  		$value['row']=intval($value['row']);	
						  	}

						  	if(isset($value['comment'])){
						  		unset($value['comment']);	
						  	}
						  	if(isset($value['wait'])){
						  		unset($value['wait']);	
						  	}
						  	if(isset($value['nextAction'])){
						  		unset($value['nextAction']);	
						  	}
						  	if(isset($value['variablename'])){
						  		unset($value['variablename']);	
						  	}
						  	if(isset($value['setvariablename'])){
						  		unset($value['setvariablename']);	
						  	}
						  	if(isset($value['variablevalue'])){
						  		unset($value['variablevalue']);	
						  	}
						  	if(isset($value['returntype'])){
						  		unset($value['returntype']);	
						  	}

						  	/*if(isset($value['value']) && $value['value']!=""){
						  		$value['value']=$value['value'];
						  	}*/
						  	if(isset($value['command']) && $value['command']!=""){
						  		$value['command']="[var]".$value['command'];
						  		
						  	}if(isset($value['content']) && $value['content']!=""){
						  		$value['content']=$value['content'];
						  	}if(isset($value['sumvalue']) && $value['sumvalue']!=""){
						  		foreach ($value['sumvalue'] as $key => $sumvalue) {
						  			$value['value'][]=$sumvalue;
						  		}
						  		unset($value['sumvalue']);
						  	}if(isset($value['filelocation']) && $value['filelocation']!=""){
						  		$value['workbook_name']=$value['filelocation'];
						  	}

						  	if(isset($value['nextAction']) && $value['nextAction']!=""){
						  		$tablerecord[0]['on_success']['next']['next_action']=intval($value['nextAction']);	
						  	}
							
						}
						
							if(isset($id['0']) && ($id['0']=="while" || $id['0']=="ifelse"))
							{
						  		$setnxtaction=$nextActionCounter;
						  		if($finalpostsize==$counterno){
						  			$setnxtaction=0;
								  }
								
						  		$value['then']=$setnxtaction;
								$tablerecord[0]['on_success']['next']['next_action']="[var]next_action";
								
								if($id['0']=="while" ){
									$assignwhileCounter=$nextActionCounter; //for counter while child.
									$assignwhileCounter=$assignwhileCounter-1;
									$whileCondition="1";
								} 
								//echo "while";
								$nextActionCounter++;  
							}
							if(isset($id['0']) && $id['0']=="foreach"){ //echo "foreach";
								$value['then']=$nextActionCounter;
								$check_same_level=sizeof($jsonArray)-1;
								$counter_foreach=0;
								$jsonArrayData=json_decode($_POST['nestable_structure'],true);
								if($check_same_level>0){
									
									if(isset($jsonArray[$i]['children'])){
										$find_id=get_last_index($jsonArray[$i]['children']);
										$foreach_id_next_action[$find_id]=$nextActionCounter-1;
									}
									$find=$jsonArray[$check_same_level]['id'];
									$value['else']=nested_array($jsonArrayData,$find,$counter_foreach);
								}else{
									
									$find=$jsonArray[$check_same_level]['id'];
									$value['else']=nested_array($jsonArrayData,$find,$counter_foreach);
								}
								$value['loop_obj']="[var]for_each".$foreach_obj_counter;
								$tablerecord[0]['on_success']['next']['next_action']="[var]next_action";	
								$foreach_obj_counter++;
							}
							
							if($tablerecord[0]['on_success']['next']['next_action']=="")
						  	{
						  		
						  		if(isset($setnxtaction) && $finalpostsize==$counterno){
						  			$zero=0;
						  			$tablerecord[0]['on_success']['next']['next_action']=intval($zero);	
						  		}else{
						  			$tablerecord[0]['on_success']['next']['next_action']=intval($nextActionCounter);	
								}
								if(isset($whileCondition) && $whileCondition=="1" && $sq_key==$whileCaseId){
									$tablerecord[0]['on_success']['next']['next_action']=intval($assignwhileCounter);	
									$whileCondition="";
								}
								//foreach 
								
								if(!empty($foreach_id_next_action)){	
									$check_key=array_keys($foreach_id_next_action);
									if(in_array($sq_key,$check_key)){ 
										$index_val=$foreach_id_next_action[$sq_key];
										$tablerecord[0]['on_success']['next']['next_action']=intval($index_val);
									}
								}
						  		$nextActionCounter++;
							}
							
							if(sizeof($get_form_value['data'])>0){
								$getadddata['data']=array_merge($getdata['data'][0]['data'], $value);
								$getfinaldata[]=array_merge($tablerecord[0],$getadddata);
							}
							  	foreach ($getdata['data'][0]['data'] as $key => $formvalue){
										$search="[var]";
										$checkdata="";
										$pos=strripos($formvalue,"[var]");
										if ($pos === false){
											 
										}else{
											
											$variablename= str_replace("[var]","", $formvalue);
											$variablenames[]=array("type"=>"string","name"=>$variablename,"value"=>"");
										}
							  	}
							  	$counterno++;
				}
				///Create data end..
			if ( is_array($jsonArray[$i]['children'])) {
				$lastIndex=sizeof($jsonArray[$i]['children'])-1;
				$whileCaseId=$jsonArray[$i]['children'][$lastIndex]['id'];
	        makeNestableListUsingJSONArray($jsonArray[$i]['children']);
	      }
	}
}
			  
function get_last_index($dataArray){
	$sizeIndex=sizeof($dataArray)-1;
	$Index=$dataArray[$sizeIndex]['id'];
	return $Index;
}
function nested_array($datafinal,$find,$counter){
    foreach($datafinal as $value)
    { 
        $res =  rec($value,$find,$counter,array('counter'=>$counter,'find_status'=>0));
        if($res['find_status']==1)
        {
            return $res['counter'];
        }
    }
}
function rec($mainArr,$find,&$counter,$res)
{   
        $counter++;
        if(array_key_exists('children',$mainArr))
        {
            if($mainArr['id']==$find)
            {
                return array('counter'=>$counter,'find_status'=>1);
            }                
            foreach($mainArr['children'] as $subArr)
            {
                $res = rec($subArr,$find,$counter,array('counter'=>$counter,'find_status'=>0));
                if($res['find_status'] == 1 )
                {
                    return array('counter'=>$counter,'find_status'=>1);
                }
            } 
        }
        else
        {
            if($mainArr['id']==$find)
            {
              return array('counter'=>$counter,'find_status'=>1);
            }
            else
            {
                return array('counter'=>$counter,'find_status'=>0);
            }
        }
}
$get_sequence_index="";	
if(isset($_POST['nestable_structure']) && $_POST['nestable_structure']!=""){
	$get_sequence_index=json_decode($_POST['nestable_structure'],true);
	makeNestableListUsingJSONArray($get_sequence_index);
}

					//variable array..
				  	if(isset($_POST['variablenamearray']) && $_POST['variablenamearray']!=""){
				  		$namevar=explode(",",$_POST['variablenamearray']);
				  		$typevar=explode(",",$_POST['variabletypearray']);
				  		$defvar=explode(",",$_POST['variabledefaultarray']);
				  		for ($variabearr=0; $variabearr < sizeof($namevar); $variabearr++){
				  				if($typevar[$variabearr]=="list"){
				  					$listarray=explode(":",$defvar[$variabearr]);
				  					$variablenames[]=array("type"=>$typevar[$variabearr],"name"=>$namevar[$variabearr],"value"=>$listarray);
				  				}else{
				  					$variablenames[]=array("type"=>$typevar[$variabearr],"name"=>$namevar[$variabearr],"value"=>$defvar[$variabearr]);
				  				}
								
				  		}
				  	}
				  	
			  		if(sizeof($getfinaldata)>0 || sizeof($tasklistArray)>0){
			  					$title="";
			  					if(isset($_GET['title']) && $_GET['title']!=""){
			  						$title=$_GET['title'];
			  					}
				  			  $final_variablenames=unique_multidim_array($variablenames,'name');
				  			  $uniqueid=$_SESSION['user']['name']."_".rand();
				  			  if(sizeof($getfinaldata)>0){
				  			  		$tasklistArray['tasklist'][]=array("task_id"=>$taskCounter,"uniqueid"=>$uniqueid,"userId"=>$_SESSION['user']['user_id'],"nm"=>"","actionlist"=>$getfinaldata);
				  			  }
							  $submitdata[]=$tasklistArray;
							  //print_r($submitdata); die;
				  			  $insertId="0";
				  			  if($_GET['insertId']!=""){
				  			  	$insertId=$_GET['insertId'];
				  			  }
							  $responseAddRobot=add_robot(array("id"=>$insertId,"robot"=>$submitdata,"variablelist"=>$final_variablenames,'title'=>$title,"createdBy"=>$_SESSION['user']['user_id'],'nestable_structure'=>$_POST['nestable_structure']));
							   
							  if($responseAddRobot['success']=="true"){
							  		echo $responseAddRobot['data'];
							  }
							  else{
							  		echo "0";
							  }	
			  		}
			  		else{
						  		echo "0";
					}
			}
			else{
			
				echo "3";
			}
function unique_multidim_array($array, $key) { 
	    $temp_array = array(); 
	    $i = 0; 
	    $key_array = array(); 
	    
	    foreach($array as $val) { 
	        if (!in_array($val[$key], $key_array)) { 
	            $key_array[$i] = $val[$key]; 
	            $temp_array[] = $val; 
	        } 
	        $i++; 
	    } 
	    return $temp_array; 
}

?>